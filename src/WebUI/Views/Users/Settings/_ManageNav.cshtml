@* @inject SignInManager<ApplicationIdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
} *@
@using Contact_zoo_at_home.Infrastructure.Identity;

@{
    Roles Role = (Roles)Convert.ToInt32(User.FindFirst("Role"));
    string? currentId = ViewData["CurrentId"]?.ToString();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link" id="profile" asp-controller="Users" asp-action="Profile">Profile</a></li>
    <li class="nav-item"><a class="nav-link" id="profileSettings" asp-controller="Users" asp-action="ProfileSettings">Profile Settings</a></li>
    <li class="nav-item"><a class="nav-link" id="changePassword" asp-controller="Users" asp-action="ChangePassword">Password</a></li>
   @*  @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li> *@
</ul>
