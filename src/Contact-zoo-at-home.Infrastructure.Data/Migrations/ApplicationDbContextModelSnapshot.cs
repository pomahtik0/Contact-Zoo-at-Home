// <auto-generated />
using System;
using Contact_zoo_at_home.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contact_zoo_at_home.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseContractBaseUser", b =>
                {
                    b.Property<int>("BaseContractId")
                        .HasColumnType("int");

                    b.Property<int>("BaseUserId")
                        .HasColumnType("int");

                    b.HasKey("BaseContractId", "BaseUserId");

                    b.HasIndex("BaseUserId");

                    b.ToTable("ContractPetRepresentatives", (string)null);
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("_contractorId")
                        .HasColumnType("int");

                    b.Property<int?>("_customerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("_contractorId");

                    b.HasIndex("_customerId");

                    b.ToTable("Contracts");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Pets.BasePet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalShelterId")
                        .HasColumnType("int");

                    b.Property<int?>("BaseContractId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividualPetOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RaitingUserVotesCount")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("ZooShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalShelterId");

                    b.HasIndex("BaseContractId");

                    b.HasIndex("IndividualPetOwnerId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ZooShopId");

                    b.ToTable("Pets", (string)null);

                    b.HasDiscriminator<string>("Species").HasValue("BasePet");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.BaseUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RatedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Contracts.StandartContract", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract");

                    b.ToTable("StandartContract");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Pets.Cat", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Pets.BasePet");

                    b.HasDiscriminator().HasValue("Cat");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Pets.Dog", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Pets.BasePet");

                    b.HasDiscriminator().HasValue("Dog");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseUser");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CompanyPetRepresentative", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseUser");

                    b.Property<int>("CompanyRepresentedId")
                        .HasColumnType("int");

                    b.HasIndex("CompanyRepresentedId");

                    b.ToTable("CompanyPetRepresentatives");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CustomerUser", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseUser");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.IndividualPetOwner", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseUser");

                    b.ToTable("IndividualPetOwners");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.AnimalShelter", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseCompany");

                    b.ToTable("AnimalShelters");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.ZooShop", b =>
                {
                    b.HasBaseType("Contact_zoo_at_home.Core.Entities.Users.BaseCompany");

                    b.ToTable("ZooShops");
                });

            modelBuilder.Entity("BaseContractBaseUser", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", null)
                        .WithMany()
                        .HasForeignKey("BaseContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", null)
                        .WithMany()
                        .HasForeignKey("BaseUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", "_contractor")
                        .WithMany()
                        .HasForeignKey("_contractorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", "_customer")
                        .WithMany()
                        .HasForeignKey("_customerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("_contractor");

                    b.Navigation("_customer");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Pets.BasePet", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.AnimalShelter", null)
                        .WithMany("OwnedPets")
                        .HasForeignKey("AnimalShelterId");

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", null)
                        .WithMany("PetsInContract")
                        .HasForeignKey("BaseContractId");

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.IndividualPetOwner", null)
                        .WithMany("OwnedPets")
                        .HasForeignKey("IndividualPetOwnerId");

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.ZooShop", null)
                        .WithMany("OwnedPets")
                        .HasForeignKey("ZooShopId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Contracts.StandartContract", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Contracts.StandartContract", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CompanyPetRepresentative", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", "CompanyRepresented")
                        .WithMany("CompanyPetRepresentatives")
                        .HasForeignKey("CompanyRepresentedId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CompanyPetRepresentative", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyRepresented");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CustomerUser", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.CustomerUser", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.IndividualPetOwner", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.IndividualPetOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.AnimalShelter", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.AnimalShelter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.ZooShop", b =>
                {
                    b.HasOne("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", null)
                        .WithOne()
                        .HasForeignKey("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.ZooShop", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Contracts.BaseContract", b =>
                {
                    b.Navigation("PetsInContract");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.BaseCompany", b =>
                {
                    b.Navigation("CompanyPetRepresentatives");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.IndividualUsers.IndividualPetOwner", b =>
                {
                    b.Navigation("OwnedPets");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.AnimalShelter", b =>
                {
                    b.Navigation("OwnedPets");
                });

            modelBuilder.Entity("Contact_zoo_at_home.Core.Entities.Users.UsersAsCompany.ZooShop", b =>
                {
                    b.Navigation("OwnedPets");
                });
#pragma warning restore 612, 618
        }
    }
}
